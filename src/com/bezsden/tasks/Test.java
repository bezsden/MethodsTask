package com.bezsden.tasks;

public abstract class Test {
    // done
    //    Условие: даны две коллекции коллекция строк Arrays.asList(«a1», «a4», «a3», «a2», «a1», «a4») и коллекция людей класса People (с полями name — имя, age — возраст, sex — пол), вида Arrays.asList( new People(«Вася», 16, Sex.MAN), new People(«Петя», 23, Sex.MAN), new People(«Елена», 42, Sex.WOMEN), new People(«Иван Иванович», 69, Sex.MAN))
//    Задача	Ожидаемый результат
//    Отсортировать коллекцию строк по алфавиту	[a1, a1, a2, a3, a4, a4]
//    Отсортировать коллекцию строк по алфавиту в обратном порядке	[a4, a4, a3, a2, a1, a1]
//    Отсортировать коллекцию строк по алфавиту и убрать дубликаты	[a1, a2, a3, a4]
//    Отсортировать коллекцию строк по алфавиту в обратном порядке и убрать дубликаты	[a4, a3, a2, a1]
//    Отсортировать коллекцию людей по имени в обратном алфавитном порядке	[{'Петя'}, {'Иван Иванович'}, {'Елена'}, {'Вася'}]
//    Отсортировать коллекцию людей сначала по полу, а потом по возрасту	[{'Вася'}, {'Петя'}, {'Иван Иванович'}, {'Елена'}]

    //to do

//    Условие: дана коллекция строк Arrays.asList(«a1», «a2», «a3», «a1»)
//    Задача	Ожидаемый результат
//    Вернуть количество вхождений объекта «a1»	2
//    Вернуть первый элемент коллекции или 0, если коллекция пуста	a1
//    Вернуть последний элемент коллекции или «empty», если коллекция пуста	a1
//    Найти элемент в коллекции равный «a3» или кинуть ошибку	a3
//    Вернуть третий элемент коллекции по порядку	a3
//    Вернуть два элемента начиная со второго	[a2, a3]
//
//    Условие: дана коллекция класс People (с полями name — имя, age — возраст, sex — пол), вида Arrays.asList( new People(«Вася», 16, Sex.MAN), new People(«Петя», 23, Sex.MAN), new People(«Елена», 42, Sex.WOMEN), new People(«Иван Иванович», 69, Sex.MAN))
//    Задача	Ожидаемый результат
//    Выбрать мужчин-военнообязанных (от 18 до 27 лет)	[{name='Петя', age=23, sex=MAN}]
//    Найти средний возраст среди мужчин	36
//    Найти кол-во потенциально работоспособных людей в выборке (т.е. от 18 лет и учитывая что женщины выходят в 55 лет, а мужчина в 60)	2
//
//
//
//
//    Условие: дана коллекция строк Arrays.asList(«a1», «a2», «a3», «a1»)
//    Задача	Ожидаемый результат
//    Найти существуют ли хоть один «a1» элемент в коллекции	true
//    Найти существуют ли хоть один «a8» элемент в коллекции	false
//    Найти есть ли символ «1» у всех элементов коллекции	false
//    Проверить что не существуют ни одного «a7» элемента в коллекции	true
//
//
//    Условие: даны две коллекции collection1 = Arrays.asList(«a1», «a2», «a3», «a1») и collection2 = Arrays.asList(«1,2,0», «4,5»)
//    Задача	Ожидаемый результат
//    Добавить "_1" к каждому элементу первой коллекции	[a1_1, a2_1, a3_1, a1_1]
//    В первой коллекции убрать первый символ и вернуть массив чисел (int[])	[1, 2, 3, 1]
//    Из второй коллекции получить все числа, перечисленные через запятую из всех элементов	[1, 2, 0, 4, 5]
//    Из второй коллекции получить сумму всех чисел, перечисленных через запятую	12
//
//

//
//
//    Условие: дана коллекция строк Arrays.asList(«a1», «a2», «a3», «a1»), и коллекция класса Peoples из прошлых примеров про Sorted и Filter функции
//    Задача	Ожидаемый результат
//    Найти максимальное значение среди коллекции строк	a3
//    Найти минимальное значение среди коллекции строк	a1
//    Найдем человека с максимальным возрастом	{name='Иван Иванович', age=69, sex=MAN}
//    Найдем человека с минимальным возрастом	{name='Вася', age=16, sex=MAN}
//
//
//    Условие: Дана коллекция чисел Arrays.asList(1, 2, 3, 4, 2)
//    Задача	Ожидаемый результат
//    Получить сумму чисел или вернуть 0	12
//    Вернуть максимум или -1	4
//    Вернуть сумму нечетных чисел или 0	4
//
//
//    Условие: Дана коллекция чисел Arrays.asList(1, 2, 3, 4)
//    Задача	Ожидаемый результат
//    Получить сумму нечетных чисел	4
//    Вычесть от каждого элемента 1 и получить среднее	1.5
}
